version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11.4
    working_directory: /home/circleci/citymapper/go-minipypi
    environment:
      TEST_RESULTS: &test_results /tmp/test-results
      OUTPUT_BIN: &output_bin /tmp/bin

    steps:
      - checkout
      - run: mkdir -p "$TEST_RESULTS"
      - run: mkdir -p "$OUTPUT_BIN"

      - run:
          name: Run unit tests
          command: gotestsum --junitfile ${TEST_RESULTS}/go-test-report.xml

      - run:
          name: build amd64
          environment:
            GOOS: linux
            GOARCH: amd64
          command: |
            go build -ldflags "-X main.date=`date -u +%Y-%m-%dT%H:%M:%SZ` -X main.commit=${CIRCLE_SHA1}" -o go-minipypi-Linux-amd64
            gzip go-minipypi-Linux-amd64

      - run:
          name: build arm64
          environment:
            GOOS: linux
            GOARCH: arm64
          command: |
            go build -ldflags "-X main.date=`date -u +%Y-%m-%dT%H:%M:%SZ` -X main.commit=${CIRCLE_SHA1}" -o go-minipypi-Linux-arm64
            gzip go-minipypi-Linux-arm64

      - run:
          name: Create build artifacts
          command: mv -f go-minipypi-*.gz "$OUTPUT_BIN"

      - store_artifacts:
          path: *test_results
          destination: raw-test-output

      - store_test_results:
          path: *test_results

      - store_artifacts:
          path: *output_bin
          destination: bin
